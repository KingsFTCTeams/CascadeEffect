/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Module: SkiControl.h
//
// Description:
//        Ski control interface ... the skis are the arms used to push the field balancing bridges down to allow
//        the robot to drive up onto the balancing bridge.
//
// Usage:
//        nothing special
//
// Direct Motor Use:
//        Right_Ski - right side ski/servo (srvo_S1_C3_5)
//        Left_Ski  - left side ski/servo  (srvo_S1_C3_6)
//
// Direct Sensor Use:
//        none
//
// Timer Use:
//        none
//
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef SKI_CONTROL_H
#define SKI_CONTROL_H

#pragma systemFile            // this eliminates warning for "unreferenced" functions

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Includes
//

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// #defines
//

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Public Global Variables
//
typedef enum
{
  SKIS_IN,
  SKIS_OUT

} tSkisPosition;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Private Global Variables
//

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Public Function Declarations
//

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Private Function Declarations
//

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Task Definitions
//

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Function Definitions
//

/////////////////////////////////////////////////////////////////////////////////////////
//
// PUBLIC FUNCTION: Lower or raise both of the skis ... they do not operate indepently
//
void SetSkis(tSkisPosition position)
{
  if ( AutonomousIsAborted() )
    return;

  int servoOffset = (position == SKIS_IN ? SKI_IN_POS : SKI_OUT_POS);

  servo[Left_Ski]  = LEFT_SKI_OFFSET_CALC(servoOffset);
  servo[Right_Ski] = RIGHT_SKI_OFFSET_CALC(servoOffset);

  wait1Msec(500);
}

#endif // SKI_CONTROL_H
