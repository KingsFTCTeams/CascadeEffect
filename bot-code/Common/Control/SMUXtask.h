/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Module: SMUXtask.h
//
// Description:
//        Handles all reading of sensors attached to the SMUX
//          * Accelerometer
//          * IR1 sensor
//          * Ultrasonic sensor
//          * Magnetic sensor
//
// Usage:
//        1) Run the UpdateSMUXsensorsTask task
//        2) Call the appropriate function to read the desired sensor value
//
// Direct Motor Use:
//        none
//
// Direct Sensor Use:
//          * Accelerometer
//          * IR1 sensor
//          * Ultrasonic sensor
//          * Magnetic sensor
//
// Timer Use:
//        none
//
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef SMUX_TASK_H
#define SMUX_TASK_H

#pragma systemFile            // this eliminates warning for "unreferenced" functions

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Includes
//
#include "Includes\RobotC Drivers v1.8.1\drivers\HTMAG-driver.h"            //
#include "Includes\RobotC Drivers v1.8.1\drivers\HTIRS2-AC-ONLY-driver.h"		// Hi-Technic Sensor Drivers
#include "Includes\RobotC Drivers v1.8.1\drivers\LEGOUS-driver.h"		        //
#include "..\Common\HTAC-ALL_ONLY-driver.h"		          //

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// #defines
//

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Public Global Variables
//

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Private Global Variables
//
int _nAccelSensorValue;
int _nIR1SensorValue;
int _nIR2SensorValue;
int _nUSsensorValue;
int _nMagnetSensorValue;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Public Function Declarations
//
#define AccelSensorVal()	  ( _nAccelSensorValue )
#define IR1SensorVal()	    ( _nIR1SensorValue )
#define IR2SensorVal()	    ( _nIR2SensorValue )
#define USsensorVal()	      ( _nUSsensorValue )
#define MagneticSensorVal()	( _nMagnetSensorValue )

/////////////////////////////////////////////////////////////////////////////////////////
//
// PRIVATE FUNCTION: initialization
//
#define initSMUXsensorsValues() \
{                               \
	_nAccelSensorValue = 0;       \
	_nIR1SensorValue = 0;         \
	_nIR2SensorValue = 0;         \
	_nUSsensorValue = 0;          \
	_nMagnetSensorValue = 0;      \
  HTSMUXinit();                 \
  HTSMUXscanPorts(HTSmux);      \
  HTMAGstartCal(MAG);           \
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Private Function Declarations
//

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Task Definitions
//
//    Keep all sensor values updated for sensors that are connected to the SMUX
//
task UpdateSMUXsensorsTask()
{
	initSMUXsensorsValues();
	int dummy;

	while (true)
	{
	  HTACreadAllAxes(ACCEL, dummy, _nAccelSensorValue,dummy);
    _nUSsensorValue = USreadDist(US);
    _nIR1SensorValue = HTIRS2readACDir(IR);
    _nIR2SensorValue = HTIRS2readACDir(IR2);
    _nMagnetSensorValue = HTMAGreadVal(MAG);
		wait1Msec(50);
	}
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Function Definitions
//

/////////////////////////////////////////////////////////////////////////////////////////
//
// PRIVATE FUNCTION: <description>
//

/////////////////////////////////////////////////////////////////////////////////////////
//
// PRIVATE FUNCTION: <description>
//

#endif // SMUX_TASK_H
